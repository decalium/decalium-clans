--- a/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java
+++ b/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java
@@ -53,6 +53,7 @@
         this.isSourcePiston = source;
     }
 
+    @Override
     public CompoundTag getUpdateTag() {
         return this.save(new CompoundTag());
     }
@@ -280,7 +281,7 @@
                 if (blockEntity.movedState != null && world.getBlockState(pos).is(Blocks.MOVING_PISTON)) {
                     BlockState blockState = Block.updateFromNeighbourShapes(blockEntity.movedState, world, pos);
                     if (blockState.isAir()) {
-                        world.setBlock(pos, blockEntity.movedState, 84);
+                        world.setBlock(pos, blockEntity.movedState, com.destroystokyo.paper.PaperConfig.allowPistonDuplication ? 84 : (84 | 2)); // Paper - force notify (flag 2), it's possible the set type by the piston block (which doesn't notify) set this block to air
                         Block.updateOrDestroy(blockEntity.movedState, blockState, world, pos, 3);
                     } else {
                         if (blockState.hasProperty(BlockStateProperties.WATERLOGGED) && blockState.getValue(BlockStateProperties.WATERLOGGED)) {
@@ -305,6 +306,7 @@
         }
     }
 
+    @Override
     public void load(CompoundTag nbt) {
         super.load(nbt);
         this.movedState = NbtUtils.readBlockState(nbt.getCompound("blockState"));
@@ -315,6 +317,7 @@
         this.isSourcePiston = nbt.getBoolean("source");
     }
 
+    @Override
     public CompoundTag save(CompoundTag nbt) {
         super.save(nbt);
         nbt.put("blockState", NbtUtils.writeBlockState(this.movedState));
