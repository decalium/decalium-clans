--- a/net/minecraft/world/entity/animal/Animal.java
+++ b/net/minecraft/world/entity/animal/Animal.java
@@ -17,6 +17,7 @@
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.ExperienceOrb;
 import net.minecraft.world.entity.MobSpawnType;
+import net.minecraft.world.entity.TamableAnimal;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
@@ -27,11 +28,16 @@
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
+import org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityEnterLoveModeEvent;
+// CraftBukkit end
 
 public abstract class Animal extends AgeableMob {
+
     static final int PARENT_AGE_AFTER_BREEDING = 6000;
-    private int inLove;
-    private UUID loveCause;
+    public int inLove;
+    public UUID loveCause;
+    public ItemStack breedItem; // CraftBukkit - Add breedItem variable
 
     protected Animal(EntityType<? extends Animal> type, Level world) {
         super(type, world);
@@ -39,6 +45,7 @@
         this.setPathfindingMalus(BlockPathTypes.DAMAGE_FIRE, -1.0F);
     }
 
+    @Override
     protected void customServerAiStep() {
         if (this.getAge() != 0) {
             this.inLove = 0;
@@ -47,6 +54,7 @@
         super.customServerAiStep();
     }
 
+    @Override
     public void aiStep() {
         super.aiStep();
         if (this.getAge() != 0) {
@@ -56,28 +64,36 @@
         if (this.inLove > 0) {
             --this.inLove;
             if (this.inLove % 10 == 0) {
-                double d = this.random.nextGaussian() * 0.02D;
-                double e = this.random.nextGaussian() * 0.02D;
-                double f = this.random.nextGaussian() * 0.02D;
-                this.level.addParticle(ParticleTypes.HEART, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), d, e, f);
+                double d0 = this.random.nextGaussian() * 0.02D;
+                double d1 = this.random.nextGaussian() * 0.02D;
+                double d2 = this.random.nextGaussian() * 0.02D;
+
+                this.level.addParticle(ParticleTypes.HEART, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), d0, d1, d2);
             }
         }
 
     }
 
-    public boolean hurt(DamageSource source, float amount) {
-        if (this.isInvulnerableTo(source)) {
+    /* CraftBukkit start
+    // Function disabled as it has no special function anymore after
+    // setSitting is disabled.
+    @Override
+    public boolean damageEntity(DamageSource damagesource, float f) {
+        if (this.isInvulnerable(damagesource)) {
             return false;
         } else {
             this.inLove = 0;
-            return super.hurt(source, amount);
+            return super.damageEntity(damagesource, f);
         }
     }
+    // CraftBukkit end */
 
+    @Override
     public float getWalkTargetValue(BlockPos pos, LevelReader world) {
         return world.getBlockState(pos.below()).is(Blocks.GRASS_BLOCK) ? 10.0F : world.getBrightness(pos) - 0.5F;
     }
 
+    @Override
     public void addAdditionalSaveData(CompoundTag nbt) {
         super.addAdditionalSaveData(nbt);
         nbt.putInt("InLove", this.inLove);
@@ -87,10 +103,12 @@
 
     }
 
+    @Override
     public double getMyRidingOffset() {
         return 0.14D;
     }
 
+    @Override
     public void readAdditionalSaveData(CompoundTag nbt) {
         super.readAdditionalSaveData(nbt);
         this.inLove = nbt.getInt("InLove");
@@ -101,14 +119,17 @@
         return world.getBlockState(pos.below()).is(Blocks.GRASS_BLOCK) && world.getRawBrightness(pos, 0) > 8;
     }
 
+    @Override
     public int getAmbientSoundInterval() {
         return 120;
     }
 
+    @Override
     public boolean removeWhenFarAway(double distanceSquared) {
         return false;
     }
 
+    @Override
     protected int getExperienceReward(Player player) {
         return 1 + this.level.random.nextInt(3);
     }
@@ -117,20 +138,23 @@
         return stack.is(Items.WHEAT);
     }
 
+    @Override
     public InteractionResult mobInteract(Player player, InteractionHand hand) {
-        ItemStack itemStack = player.getItemInHand(hand);
-        if (this.isFood(itemStack)) {
+        ItemStack itemstack = player.getItemInHand(hand);
+
+        if (this.isFood(itemstack)) {
             int i = this.getAge();
+
             if (!this.level.isClientSide && i == 0 && this.canFallInLove()) {
-                this.usePlayerItem(player, hand, itemStack);
+                this.usePlayerItem(player, hand, itemstack);
                 this.setInLove(player);
                 this.gameEvent(GameEvent.MOB_INTERACT, this.eyeBlockPosition());
                 return InteractionResult.SUCCESS;
             }
 
             if (this.isBaby()) {
-                this.usePlayerItem(player, hand, itemStack);
-                this.ageUp((int)((float)(-i / 20) * 0.1F), true);
+                this.usePlayerItem(player, hand, itemstack);
+                this.ageUp((int) ((float) (-i / 20) * 0.1F), true);
                 this.gameEvent(GameEvent.MOB_INTERACT, this.eyeBlockPosition());
                 return InteractionResult.sidedSuccess(this.level.isClientSide);
             }
@@ -155,12 +179,19 @@
     }
 
     public void setInLove(@Nullable Player player) {
-        this.inLove = 600;
+        // CraftBukkit start
+        EntityEnterLoveModeEvent entityEnterLoveModeEvent = CraftEventFactory.callEntityEnterLoveModeEvent(player, this, 600);
+        if (entityEnterLoveModeEvent.isCancelled()) {
+            return;
+        }
+        this.inLove = entityEnterLoveModeEvent.getTicksInLove();
+        // CraftBukkit end
         if (player != null) {
             this.loveCause = player.getUUID();
         }
+        this.breedItem = player.getInventory().getSelected(); // CraftBukkit
 
-        this.level.broadcastEntityEvent(this, (byte)18);
+        this.level.broadcastEntityEvent(this, (byte) 18);
     }
 
     public void setInLoveTime(int loveTicks) {
@@ -176,8 +207,9 @@
         if (this.loveCause == null) {
             return null;
         } else {
-            Player player = this.level.getPlayerByUUID(this.loveCause);
-            return player instanceof ServerPlayer ? (ServerPlayer)player : null;
+            Player entityhuman = this.level.getPlayerByUUID(this.loveCause);
+
+            return entityhuman instanceof ServerPlayer ? (ServerPlayer) entityhuman : null;
         }
     }
 
@@ -190,50 +222,65 @@
     }
 
     public boolean canMate(Animal other) {
-        if (other == this) {
-            return false;
-        } else if (other.getClass() != this.getClass()) {
-            return false;
-        } else {
-            return this.isInLove() && other.isInLove();
-        }
+        return other == this ? false : (other.getClass() != this.getClass() ? false : this.isInLove() && other.isInLove());
     }
 
     public void spawnChildFromBreeding(ServerLevel world, Animal other) {
-        AgeableMob ageableMob = this.getBreedOffspring(world, other);
-        if (ageableMob != null) {
-            ServerPlayer serverPlayer = this.getLoveCause();
-            if (serverPlayer == null && other.getLoveCause() != null) {
-                serverPlayer = other.getLoveCause();
+        AgeableMob entityageable = this.getBreedOffspring(world, other);
+
+        if (entityageable != null) {
+            // CraftBukkit start - set persistence for tame animals
+            if (entityageable instanceof TamableAnimal && ((TamableAnimal) entityageable).isTame()) {
+                entityageable.setPersistenceRequired(true);
             }
+            // CraftBukkit end
+            ServerPlayer entityplayer = this.getLoveCause();
 
-            if (serverPlayer != null) {
-                serverPlayer.awardStat(Stats.ANIMALS_BRED);
-                CriteriaTriggers.BRED_ANIMALS.trigger(serverPlayer, this, other, ageableMob);
+            if (entityplayer == null && other.getLoveCause() != null) {
+                entityplayer = other.getLoveCause();
+            }
+            // CraftBukkit start - call EntityBreedEvent
+            entityageable.setBaby(true);
+            entityageable.moveTo(this.getX(), this.getY(), this.getZ(), 0.0F, 0.0F);
+            int experience = this.getRandom().nextInt(7) + 1;
+            org.bukkit.event.entity.EntityBreedEvent entityBreedEvent = org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory.callEntityBreedEvent(entityageable, this, other, entityplayer, this.breedItem, experience);
+            if (entityBreedEvent.isCancelled()) {
+                return;
+            }
+            experience = entityBreedEvent.getExperience();
+            // CraftBukkit end
+
+            if (entityplayer != null) {
+                entityplayer.awardStat(Stats.ANIMALS_BRED);
+                CriteriaTriggers.BRED_ANIMALS.trigger(entityplayer, this, other, entityageable);
             }
 
             this.setAge(6000);
             other.setAge(6000);
             this.resetLove();
             other.resetLove();
-            ageableMob.setBaby(true);
-            ageableMob.moveTo(this.getX(), this.getY(), this.getZ(), 0.0F, 0.0F);
-            world.addFreshEntityWithPassengers(ageableMob);
-            world.broadcastEntityEvent(this, (byte)18);
+            world.addAllEntities(entityageable, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING); // CraftBukkit - added SpawnReason
+            world.broadcastEntityEvent(this, (byte) 18);
             if (world.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
-                world.addFreshEntity(new ExperienceOrb(world, this.getX(), this.getY(), this.getZ(), this.getRandom().nextInt(7) + 1));
+                // CraftBukkit start - use event experience
+                if (experience > 0) {
+                    world.addFreshEntity(new ExperienceOrb(world, this.getX(), this.getY(), this.getZ(), experience, org.bukkit.entity.ExperienceOrb.SpawnReason.BREED, entityplayer, entityageable)); // Paper
+                }
+                // CraftBukkit end
             }
 
         }
     }
 
+    @Override
     public void handleEntityEvent(byte status) {
         if (status == 18) {
-            for(int i = 0; i < 7; ++i) {
-                double d = this.random.nextGaussian() * 0.02D;
-                double e = this.random.nextGaussian() * 0.02D;
-                double f = this.random.nextGaussian() * 0.02D;
-                this.level.addParticle(ParticleTypes.HEART, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), d, e, f);
+            for (int i = 0; i < 7; ++i) {
+                double d0 = this.random.nextGaussian() * 0.02D;
+                double d1 = this.random.nextGaussian() * 0.02D;
+                double d2 = this.random.nextGaussian() * 0.02D;
+
+                this.level.addParticle(ParticleTypes.HEART, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), d0, d1, d2);
             }
         } else {
             super.handleEntityEvent(status);
