--- a/net/minecraft/world/level/block/BubbleColumnBlock.java
+++ b/net/minecraft/world/level/block/BubbleColumnBlock.java
@@ -36,7 +36,9 @@
         this.registerDefaultState(this.stateDefinition.any().setValue(DRAG_DOWN, Boolean.valueOf(true)));
     }
 
+    @Override
     public void entityInside(BlockState state, Level world, BlockPos pos, Entity entity) {
+        if (!new io.papermc.paper.event.entity.EntityInsideBlockEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.v1_17_R1.block.CraftBlock.at(world, pos)).callEvent()) { return; } // Paper
         BlockState blockState = world.getBlockState(pos.above());
         if (blockState.isAir()) {
             entity.onAboveBubbleCol(state.getValue(DRAG_DOWN));
@@ -54,10 +56,12 @@
 
     }
 
+    @Override
     public void tick(BlockState state, ServerLevel world, BlockPos pos, Random random) {
         updateColumn(world, pos, state, world.getBlockState(pos.below()));
     }
 
+    @Override
     public FluidState getFluidState(BlockState state) {
         return Fluids.WATER.getSource(false);
     }
@@ -97,6 +101,7 @@
         }
     }
 
+    @Override
     public void animateTick(BlockState state, Level world, BlockPos pos, Random random) {
         double d = (double)pos.getX();
         double e = (double)pos.getY();
@@ -116,6 +121,7 @@
 
     }
 
+    @Override
     public BlockState updateShape(BlockState state, Direction direction, BlockState neighborState, LevelAccessor world, BlockPos pos, BlockPos neighborPos) {
         world.getLiquidTicks().scheduleTick(pos, Fluids.WATER, Fluids.WATER.getTickDelay(world));
         if (!state.canSurvive(world, pos) || direction == Direction.DOWN || direction == Direction.UP && !neighborState.is(Blocks.BUBBLE_COLUMN) && canExistIn(neighborState)) {
@@ -125,28 +131,34 @@
         return super.updateShape(state, direction, neighborState, world, pos, neighborPos);
     }
 
+    @Override
     public boolean canSurvive(BlockState state, LevelReader world, BlockPos pos) {
         BlockState blockState = world.getBlockState(pos.below());
         return blockState.is(Blocks.BUBBLE_COLUMN) || blockState.is(Blocks.MAGMA_BLOCK) || blockState.is(Blocks.SOUL_SAND);
     }
 
+    @Override
     public VoxelShape getShape(BlockState state, BlockGetter world, BlockPos pos, CollisionContext context) {
         return Shapes.empty();
     }
 
+    @Override
     public RenderShape getRenderShape(BlockState state) {
         return RenderShape.INVISIBLE;
     }
 
+    @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
         builder.add(DRAG_DOWN);
     }
 
+    @Override
     public ItemStack pickupBlock(LevelAccessor world, BlockPos pos, BlockState state) {
         world.setBlock(pos, Blocks.AIR.defaultBlockState(), 11);
         return new ItemStack(Items.WATER_BUCKET);
     }
 
+    @Override
     public Optional<SoundEvent> getPickupSound() {
         return Fluids.WATER.getPickupSound();
     }
