--- a/net/minecraft/world/level/block/FlowerPotBlock.java
+++ b/net/minecraft/world/level/block/FlowerPotBlock.java
@@ -34,14 +34,17 @@
         POTTED_BY_CONTENT.put(content, this);
     }
 
+    @Override
     public VoxelShape getShape(BlockState state, BlockGetter world, BlockPos pos, CollisionContext context) {
         return SHAPE;
     }
 
+    @Override
     public RenderShape getRenderShape(BlockState state) {
         return RenderShape.MODEL;
     }
 
+    @Override
     public InteractionResult use(BlockState state, Level world, BlockPos pos, Player player, InteractionHand hand, BlockHitResult hit) {
         ItemStack itemStack = player.getItemInHand(hand);
         Item item = itemStack.getItem();
@@ -49,6 +52,26 @@
         boolean bl = blockState.is(Blocks.AIR);
         boolean bl2 = this.isEmpty();
         if (bl != bl2) {
+            // Paper start
+            org.bukkit.entity.Player player1 = (org.bukkit.entity.Player) player.getBukkitEntity();
+            boolean placing = bl2;
+            org.bukkit.block.Block bukkitblock = org.bukkit.craftbukkit.v1_17_R1.block.CraftBlock.at(world, pos);
+            org.bukkit.inventory.ItemStack bukkititemstack = org.bukkit.craftbukkit.v1_17_R1.inventory.CraftItemStack.asBukkitCopy(itemStack);
+            org.bukkit.Material mat = org.bukkit.craftbukkit.v1_17_R1.util.CraftMagicNumbers.getMaterial(content);
+            org.bukkit.inventory.ItemStack bukkititemstack1 = new org.bukkit.inventory.ItemStack(mat, 1);
+            org.bukkit.inventory.ItemStack whichitem = placing ? bukkititemstack : bukkititemstack1;
+
+            io.papermc.paper.event.player.PlayerFlowerPotManipulateEvent event = new io.papermc.paper.event.player.PlayerFlowerPotManipulateEvent(player1, bukkitblock, whichitem, placing);
+            player1.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                // Update client
+                player1.sendBlockChange(bukkitblock.getLocation(), bukkitblock.getBlockData());
+                player1.updateInventory();
+
+                return InteractionResult.PASS;
+            }
+            // Paper end
             if (bl2) {
                 world.setBlock(pos, blockState, 3);
                 player.awardStat(Stats.POT_FLOWER);
@@ -73,6 +96,7 @@
         }
     }
 
+    @Override
     public ItemStack getCloneItemStack(BlockGetter world, BlockPos pos, BlockState state) {
         return this.isEmpty() ? super.getCloneItemStack(world, pos, state) : new ItemStack(this.content);
     }
@@ -81,6 +105,7 @@
         return this.content == Blocks.AIR;
     }
 
+    @Override
     public BlockState updateShape(BlockState state, Direction direction, BlockState neighborState, LevelAccessor world, BlockPos pos, BlockPos neighborPos) {
         return direction == Direction.DOWN && !state.canSurvive(world, pos) ? Blocks.AIR.defaultBlockState() : super.updateShape(state, direction, neighborState, world, pos, neighborPos);
     }
@@ -89,6 +114,7 @@
         return this.content;
     }
 
+    @Override
     public boolean isPathfindable(BlockState state, BlockGetter world, BlockPos pos, PathComputationType type) {
         return false;
     }
