--- a/net/minecraft/world/level/block/SpawnerBlock.java
+++ b/net/minecraft/world/level/block/SpawnerBlock.java
@@ -14,29 +14,46 @@
 import net.minecraft.world.level.block.state.BlockState;
 
 public class SpawnerBlock extends BaseEntityBlock {
+
     protected SpawnerBlock(BlockBehaviour.Properties settings) {
         super(settings);
     }
 
+    @Override
     public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
         return new SpawnerBlockEntity(pos, state);
     }
 
     @Nullable
+    @Override
     public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level world, BlockState state, BlockEntityType<T> type) {
         return createTickerHelper(type, BlockEntityType.MOB_SPAWNER, world.isClientSide ? SpawnerBlockEntity::clientTick : SpawnerBlockEntity::serverTick);
     }
 
+    @Override
     public void spawnAfterBreak(BlockState state, ServerLevel world, BlockPos pos, ItemStack stack) {
         super.spawnAfterBreak(state, world, pos, stack);
-        int i = 15 + world.random.nextInt(15) + world.random.nextInt(15);
-        this.popExperience(world, pos, i);
+        /* CraftBukkit start - Delegate to getExpDrop
+        int i = 15 + worldserver.random.nextInt(15) + worldserver.random.nextInt(15);
+
+        this.dropExperience(worldserver, blockposition, i);
+        */
     }
 
+    @Override
+    public int getExpDrop(BlockState iblockdata, ServerLevel worldserver, BlockPos blockposition, ItemStack itemstack) {
+        int i = 15 + worldserver.random.nextInt(15) + worldserver.random.nextInt(15);
+
+        return i;
+        // CraftBukkit end
+    }
+
+    @Override
     public RenderShape getRenderShape(BlockState state) {
         return RenderShape.MODEL;
     }
 
+    @Override
     public ItemStack getCloneItemStack(BlockGetter world, BlockPos pos, BlockState state) {
         return ItemStack.EMPTY;
     }
