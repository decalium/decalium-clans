--- a/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
+++ b/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
@@ -22,20 +22,24 @@
         super(mob, world);
     }
 
+    @Override
     protected PathFinder createPathFinder(int range) {
         this.nodeEvaluator = new WalkNodeEvaluator();
         this.nodeEvaluator.setCanPassDoors(true);
         return new PathFinder(this.nodeEvaluator, range);
     }
 
+    @Override
     protected boolean canUpdatePath() {
         return this.mob.isOnGround() || this.isInLiquid() || this.mob.isPassenger();
     }
 
+    @Override
     protected Vec3 getTempMobPos() {
         return new Vec3(this.mob.getX(), (double)this.getSurfaceY(), this.mob.getZ());
     }
 
+    @Override
     public Path createPath(BlockPos target, int distance) {
         if (this.level.getBlockState(target).isAir()) {
             BlockPos blockPos;
@@ -64,8 +68,9 @@
         }
     }
 
+    @Override
     public Path createPath(Entity entity, int distance) {
-        return this.createPath(entity.blockPosition(), distance);
+        return this.a(entity.blockPosition(), entity, distance); // Paper - Forward target entity
     }
 
     private int getSurfaceY() {
@@ -89,6 +94,7 @@
         }
     }
 
+    @Override
     protected void trimPath() {
         super.trimPath();
         if (this.avoidSun) {
@@ -107,6 +113,7 @@
 
     }
 
+    @Override
     protected boolean canMoveDirectly(Vec3 origin, Vec3 target, int sizeX, int sizeY, int sizeZ) {
         int i = Mth.floor(origin.x);
         int j = Mth.floor(origin.z);
