--- a/net/minecraft/world/level/LevelReader.java
+++ b/net/minecraft/world/level/LevelReader.java
@@ -18,6 +18,7 @@
 import net.minecraft.world.phys.AABB;
 
 public interface LevelReader extends BlockAndTintGetter, CollisionGetter, BiomeManager.NoiseBiomeSource {
+    @Nullable ChunkAccess getChunkIfLoadedImmediately(int x, int z); // Paper - ifLoaded api (we need this since current impl blocks if the chunk is loading)
     @Nullable
     ChunkAccess getChunk(int chunkX, int chunkZ, ChunkStatus leastStatus, boolean create);
 
@@ -44,10 +45,12 @@
         return this.hasChunksAt(i, k, m, j, l, n) ? this.getBlockStates(box) : Stream.empty();
     }
 
+    @Override
     default int getBlockTint(BlockPos pos, ColorResolver colorResolver) {
         return colorResolver.getColor(this.getBiome(pos), (double)pos.getX(), (double)pos.getZ());
     }
 
+    @Override
     default Biome getNoiseBiome(int biomeX, int biomeY, int biomeZ) {
         ChunkAccess chunkAccess = this.getChunk(QuartPos.toSection(biomeX), QuartPos.toSection(biomeZ), ChunkStatus.BIOMES, false);
         return chunkAccess != null && chunkAccess.getBiomes() != null ? chunkAccess.getBiomes().getNoiseBiome(biomeX, biomeY, biomeZ) : this.getUncachedNoiseBiome(biomeX, biomeY, biomeZ);
@@ -62,10 +65,12 @@
 
     DimensionType dimensionType();
 
+    @Override
     default int getMinBuildHeight() {
         return this.dimensionType().minY();
     }
 
+    @Override
     default int getHeight() {
         return this.dimensionType().height();
     }
@@ -120,6 +125,7 @@
     }
 
     @Nullable
+    @Override
     default BlockGetter getChunkForCollisions(int chunkX, int chunkZ) {
         return this.getChunk(chunkX, chunkZ, ChunkStatus.EMPTY, false);
     }
