--- a/net/minecraft/world/entity/monster/Monster.java
+++ b/net/minecraft/world/entity/monster/Monster.java
@@ -25,15 +25,18 @@
 import net.minecraft.world.level.ServerLevelAccessor;
 
 public abstract class Monster extends PathfinderMob implements Enemy {
+    public org.bukkit.craftbukkit.v1_17_R1.entity.CraftMonster getBukkitMonster() { return (org.bukkit.craftbukkit.v1_17_R1.entity.CraftMonster) super.getBukkitEntity(); } // Paper
     protected Monster(EntityType<? extends Monster> type, Level world) {
         super(type, world);
         this.xpReward = 5;
     }
 
+    @Override
     public SoundSource getSoundSource() {
         return SoundSource.HOSTILE;
     }
 
+    @Override
     public void aiStep() {
         this.updateSwingTime();
         this.updateNoActionTime();
@@ -48,30 +51,37 @@
 
     }
 
+    @Override
     protected boolean shouldDespawnInPeaceful() {
         return true;
     }
 
+    @Override
     protected SoundEvent getSwimSound() {
         return SoundEvents.HOSTILE_SWIM;
     }
 
+    @Override
     protected SoundEvent getSwimSplashSound() {
         return SoundEvents.HOSTILE_SPLASH;
     }
 
+    @Override
     protected SoundEvent getHurtSound(DamageSource source) {
         return SoundEvents.HOSTILE_HURT;
     }
 
+    @Override
     protected SoundEvent getDeathSound() {
         return SoundEvents.HOSTILE_DEATH;
     }
 
+    @Override
     protected SoundEvent getFallDamageSound(int distance) {
         return distance > 4 ? SoundEvents.HOSTILE_BIG_FALL : SoundEvents.HOSTILE_SMALL_FALL;
     }
 
+    @Override
     public float getWalkTargetValue(BlockPos pos, LevelReader world) {
         return 0.5F - world.getBrightness(pos);
     }
@@ -97,10 +107,12 @@
         return Mob.createMobAttributes().add(Attributes.ATTACK_DAMAGE);
     }
 
+    @Override
     protected boolean shouldDropExperience() {
         return true;
     }
 
+    @Override
     protected boolean shouldDropLoot() {
         return true;
     }
@@ -109,6 +121,7 @@
         return true;
     }
 
+    @Override
     public ItemStack getProjectile(ItemStack stack) {
         if (stack.getItem() instanceof ProjectileWeaponItem) {
             Predicate<ItemStack> predicate = ((ProjectileWeaponItem)stack.getItem()).getSupportedHeldProjectiles();
