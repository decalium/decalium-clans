--- a/net/minecraft/world/entity/monster/Husk.java
+++ b/net/minecraft/world/entity/monster/Husk.java
@@ -17,6 +17,7 @@
 import net.minecraft.world.level.ServerLevelAccessor;
 
 public class Husk extends Zombie {
+
     public Husk(EntityType<? extends Husk> type, Level world) {
         super(type, world);
     }
@@ -25,48 +26,59 @@
         return checkMonsterSpawnRules(type, world, spawnReason, pos, random) && (spawnReason == MobSpawnType.SPAWNER || world.canSeeSky(pos));
     }
 
-    protected boolean isSunSensitive() {
+    @Override
+    public boolean isSunSensitive() {
         return false;
     }
 
+    @Override
     protected SoundEvent getAmbientSound() {
         return SoundEvents.HUSK_AMBIENT;
     }
 
+    @Override
     protected SoundEvent getHurtSound(DamageSource source) {
         return SoundEvents.HUSK_HURT;
     }
 
+    @Override
     protected SoundEvent getDeathSound() {
         return SoundEvents.HUSK_DEATH;
     }
 
+    @Override
     protected SoundEvent getStepSound() {
         return SoundEvents.HUSK_STEP;
     }
 
+    @Override
     public boolean doHurtTarget(Entity target) {
-        boolean bl = super.doHurtTarget(target);
-        if (bl && this.getMainHandItem().isEmpty() && target instanceof LivingEntity) {
+        boolean flag = super.doHurtTarget(target);
+
+        if (flag && this.getMainHandItem().isEmpty() && target instanceof LivingEntity) {
             float f = this.level.getCurrentDifficultyAt(this.blockPosition()).getEffectiveDifficulty();
-            ((LivingEntity)target).addEffect(new MobEffectInstance(MobEffects.HUNGER, 140 * (int)f), this);
+
+            ((LivingEntity) target).addEffect(new MobEffectInstance(MobEffects.HUNGER, 140 * (int) f), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
         }
 
-        return bl;
+        return flag;
     }
 
+    @Override
     protected boolean convertsInWater() {
         return true;
     }
 
+    @Override
     protected void doUnderWaterConversion() {
         this.convertToZombieType(EntityType.ZOMBIE);
         if (!this.isSilent()) {
-            this.level.levelEvent((Player)null, 1041, this.blockPosition(), 0);
+            this.level.levelEvent((Player) null, 1041, this.blockPosition(), 0);
         }
 
     }
 
+    @Override
     protected ItemStack getSkull() {
         return ItemStack.EMPTY;
     }
