--- a/net/minecraft/world/level/block/JukeboxBlock.java
+++ b/net/minecraft/world/level/block/JukeboxBlock.java
@@ -23,29 +23,34 @@
 import net.minecraft.world.phys.BlockHitResult;
 
 public class JukeboxBlock extends BaseEntityBlock {
+
     public static final BooleanProperty HAS_RECORD = BlockStateProperties.HAS_RECORD;
 
     protected JukeboxBlock(BlockBehaviour.Properties settings) {
         super(settings);
-        this.registerDefaultState(this.stateDefinition.any().setValue(HAS_RECORD, Boolean.valueOf(false)));
+        this.registerDefaultState((BlockState) ((BlockState) this.stateDefinition.any()).setValue(JukeboxBlock.HAS_RECORD, false));
     }
 
+    @Override
     public void setPlacedBy(Level world, BlockPos pos, BlockState state, @Nullable LivingEntity placer, ItemStack itemStack) {
         super.setPlacedBy(world, pos, state, placer, itemStack);
-        CompoundTag compoundTag = itemStack.getOrCreateTag();
-        if (compoundTag.contains("BlockEntityTag")) {
-            CompoundTag compoundTag2 = compoundTag.getCompound("BlockEntityTag");
-            if (compoundTag2.contains("RecordItem")) {
-                world.setBlock(pos, state.setValue(HAS_RECORD, Boolean.valueOf(true)), 2);
+        CompoundTag nbttagcompound = itemStack.getOrCreateTag();
+
+        if (nbttagcompound.contains("BlockEntityTag")) {
+            CompoundTag nbttagcompound1 = nbttagcompound.getCompound("BlockEntityTag");
+
+            if (nbttagcompound1.contains("RecordItem")) {
+                world.setBlock(pos, (BlockState) state.setValue(JukeboxBlock.HAS_RECORD, true), 2);
             }
         }
 
     }
 
+    @Override
     public InteractionResult use(BlockState state, Level world, BlockPos pos, Player player, InteractionHand hand, BlockHitResult hit) {
-        if (state.getValue(HAS_RECORD)) {
+        if ((Boolean) state.getValue(JukeboxBlock.HAS_RECORD)) {
             this.dropRecording(world, pos);
-            state = state.setValue(HAS_RECORD, Boolean.valueOf(false));
+            state = (BlockState) state.setValue(JukeboxBlock.HAS_RECORD, false);
             world.setBlock(pos, state, 2);
             return InteractionResult.sidedSuccess(world.isClientSide);
         } else {
@@ -54,35 +59,46 @@
     }
 
     public void setRecord(LevelAccessor world, BlockPos pos, BlockState state, ItemStack stack) {
-        BlockEntity blockEntity = world.getBlockEntity(pos);
-        if (blockEntity instanceof JukeboxBlockEntity) {
-            ((JukeboxBlockEntity)blockEntity).setRecord(stack.copy());
-            world.setBlock(pos, state.setValue(HAS_RECORD, Boolean.valueOf(true)), 2);
+        BlockEntity tileentity = world.getBlockEntity(pos);
+
+        if (tileentity instanceof JukeboxBlockEntity) {
+            // CraftBukkit start - There can only be one
+            stack = stack.copy();
+            if (!stack.isEmpty()) {
+                stack.setCount(1);
+            }
+            ((JukeboxBlockEntity) tileentity).setRecord(stack);
+            // CraftBukkit end
+            world.setBlock(pos, (BlockState) state.setValue(JukeboxBlock.HAS_RECORD, true), 2);
         }
     }
 
-    private void dropRecording(Level world, BlockPos pos) {
+    public void dropRecording(Level world, BlockPos pos) {
         if (!world.isClientSide) {
-            BlockEntity blockEntity = world.getBlockEntity(pos);
-            if (blockEntity instanceof JukeboxBlockEntity) {
-                JukeboxBlockEntity jukeboxBlockEntity = (JukeboxBlockEntity)blockEntity;
-                ItemStack itemStack = jukeboxBlockEntity.getRecord();
-                if (!itemStack.isEmpty()) {
+            BlockEntity tileentity = world.getBlockEntity(pos);
+
+            if (tileentity instanceof JukeboxBlockEntity) {
+                JukeboxBlockEntity tileentityjukebox = (JukeboxBlockEntity) tileentity;
+                ItemStack itemstack = tileentityjukebox.getRecord();
+
+                if (!itemstack.isEmpty()) {
                     world.levelEvent(1010, pos, 0);
-                    jukeboxBlockEntity.clearContent();
+                    tileentityjukebox.clearContent();
                     float f = 0.7F;
-                    double d = (double)(world.random.nextFloat() * 0.7F) + (double)0.15F;
-                    double e = (double)(world.random.nextFloat() * 0.7F) + (double)0.060000002F + 0.6D;
-                    double g = (double)(world.random.nextFloat() * 0.7F) + (double)0.15F;
-                    ItemStack itemStack2 = itemStack.copy();
-                    ItemEntity itemEntity = new ItemEntity(world, (double)pos.getX() + d, (double)pos.getY() + e, (double)pos.getZ() + g, itemStack2);
-                    itemEntity.setDefaultPickUpDelay();
-                    world.addFreshEntity(itemEntity);
+                    double d0 = (double) (world.random.nextFloat() * 0.7F) + 0.15000000596046448D;
+                    double d1 = (double) (world.random.nextFloat() * 0.7F) + 0.06000000238418579D + 0.6D;
+                    double d2 = (double) (world.random.nextFloat() * 0.7F) + 0.15000000596046448D;
+                    ItemStack itemstack1 = itemstack.copy();
+                    ItemEntity entityitem = new ItemEntity(world, (double) pos.getX() + d0, (double) pos.getY() + d1, (double) pos.getZ() + d2, itemstack1);
+
+                    entityitem.setDefaultPickUpDelay();
+                    world.addFreshEntity(entityitem);
                 }
             }
         }
     }
 
+    @Override
     public void onRemove(BlockState state, Level world, BlockPos pos, BlockState newState, boolean moved) {
         if (!state.is(newState.getBlock())) {
             this.dropRecording(world, pos);
@@ -90,31 +106,38 @@
         }
     }
 
+    @Override
     public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
         return new JukeboxBlockEntity(pos, state);
     }
 
+    @Override
     public boolean hasAnalogOutputSignal(BlockState state) {
         return true;
     }
 
+    @Override
     public int getAnalogOutputSignal(BlockState state, Level world, BlockPos pos) {
-        BlockEntity blockEntity = world.getBlockEntity(pos);
-        if (blockEntity instanceof JukeboxBlockEntity) {
-            Item item = ((JukeboxBlockEntity)blockEntity).getRecord().getItem();
+        BlockEntity tileentity = world.getBlockEntity(pos);
+
+        if (tileentity instanceof JukeboxBlockEntity) {
+            Item item = ((JukeboxBlockEntity) tileentity).getRecord().getItem();
+
             if (item instanceof RecordItem) {
-                return ((RecordItem)item).getAnalogOutput();
+                return ((RecordItem) item).getAnalogOutput();
             }
         }
 
         return 0;
     }
 
+    @Override
     public RenderShape getRenderShape(BlockState state) {
         return RenderShape.MODEL;
     }
 
+    @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
-        builder.add(HAS_RECORD);
+        builder.add(JukeboxBlock.HAS_RECORD);
     }
 }
