--- a/net/minecraft/world/item/enchantment/FrostWalkerEnchantment.java
+++ b/net/minecraft/world/item/enchantment/FrostWalkerEnchantment.java
@@ -1,6 +1,8 @@
 package net.minecraft.world.item.enchantment;
 
+import java.util.Iterator;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Position;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
@@ -12,41 +14,54 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 
 public class FrostWalkerEnchantment extends Enchantment {
+
     public FrostWalkerEnchantment(Enchantment.Rarity weight, EquipmentSlot... slotTypes) {
         super(weight, EnchantmentCategory.ARMOR_FEET, slotTypes);
     }
 
+    @Override
     public int getMinCost(int level) {
         return level * 10;
     }
 
+    @Override
     public int getMaxCost(int level) {
         return this.getMinCost(level) + 15;
     }
 
+    @Override
     public boolean isTreasureOnly() {
         return true;
     }
 
+    @Override
     public int getMaxLevel() {
         return 2;
     }
 
     public static void onEntityMoved(LivingEntity entity, Level world, BlockPos blockPos, int level) {
         if (entity.isOnGround()) {
-            BlockState blockState = Blocks.FROSTED_ICE.defaultBlockState();
-            float f = (float)Math.min(16, 2 + level);
-            BlockPos.MutableBlockPos mutableBlockPos = new BlockPos.MutableBlockPos();
+            BlockState iblockdata = Blocks.FROSTED_ICE.defaultBlockState();
+            float f = (float) Math.min(16, 2 + level);
+            BlockPos.MutableBlockPos blockposition_mutableblockposition = new BlockPos.MutableBlockPos();
+            Iterator iterator = BlockPos.betweenClosed(blockPos.offset((double) (-f), -1.0D, (double) (-f)), blockPos.offset((double) f, -1.0D, (double) f)).iterator();
 
-            for(BlockPos blockPos2 : BlockPos.betweenClosed(blockPos.offset((double)(-f), -1.0D, (double)(-f)), blockPos.offset((double)f, -1.0D, (double)f))) {
-                if (blockPos2.closerThan(entity.position(), (double)f)) {
-                    mutableBlockPos.set(blockPos2.getX(), blockPos2.getY() + 1, blockPos2.getZ());
-                    BlockState blockState2 = world.getBlockState(mutableBlockPos);
-                    if (blockState2.isAir()) {
-                        BlockState blockState3 = world.getBlockState(blockPos2);
-                        if (blockState3.getMaterial() == Material.WATER && blockState3.getValue(LiquidBlock.LEVEL) == 0 && blockState.canSurvive(world, blockPos2) && world.isUnobstructed(blockState, blockPos2, CollisionContext.empty())) {
-                            world.setBlockAndUpdate(blockPos2, blockState);
-                            world.getBlockTicks().scheduleTick(blockPos2, Blocks.FROSTED_ICE, Mth.nextInt(entity.getRandom(), 60, 120));
+            while (iterator.hasNext()) {
+                BlockPos blockposition1 = (BlockPos) iterator.next();
+
+                if (blockposition1.closerThan((Position) entity.position(), (double) f)) {
+                    blockposition_mutableblockposition.set(blockposition1.getX(), blockposition1.getY() + 1, blockposition1.getZ());
+                    BlockState iblockdata1 = world.getBlockState(blockposition_mutableblockposition);
+
+                    if (iblockdata1.isAir()) {
+                        BlockState iblockdata2 = world.getBlockState(blockposition1);
+
+                        if (iblockdata2.getMaterial() == Material.WATER && (Integer) iblockdata2.getValue(LiquidBlock.LEVEL) == 0 && iblockdata.canSurvive(world, blockposition1) && world.isUnobstructed(iblockdata, blockposition1, CollisionContext.empty())) {
+                            // CraftBukkit Start - Call EntityBlockFormEvent for Frost Walker
+                            if (org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory.handleBlockFormEvent(world, blockposition1, iblockdata, entity)) {
+                                world.getBlockTicks().scheduleTick(blockposition1, Blocks.FROSTED_ICE, Mth.nextInt(entity.getRandom(), 60, 120));
+                            }
+                            // CraftBukkit End
                         }
                     }
                 }
@@ -55,6 +70,7 @@
         }
     }
 
+    @Override
     public boolean checkCompatibility(Enchantment other) {
         return super.checkCompatibility(other) && other != Enchantments.DEPTH_STRIDER;
     }
