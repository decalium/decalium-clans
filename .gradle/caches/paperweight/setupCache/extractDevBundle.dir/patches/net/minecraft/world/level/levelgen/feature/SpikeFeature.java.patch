--- a/net/minecraft/world/level/levelgen/feature/SpikeFeature.java
+++ b/net/minecraft/world/level/levelgen/feature/SpikeFeature.java
@@ -41,6 +41,7 @@
         return SPIKE_CACHE.getUnchecked(l);
     }
 
+    @Override
     public boolean place(FeaturePlaceContext<SpikeConfiguration> context) {
         SpikeConfiguration spikeConfiguration = context.config();
         WorldGenLevel worldGenLevel = context.level();
@@ -98,6 +99,7 @@
         endCrystal.setBeamTarget(config.getCrystalBeamTarget());
         endCrystal.setInvulnerable(config.isCrystalInvulnerable());
         endCrystal.moveTo((double)spike.getCenterX() + 0.5D, (double)(spike.getHeight() + 1), (double)spike.getCenterZ() + 0.5D, random.nextFloat() * 360.0F, 0.0F);
+        endCrystal.generatedByDragonFight = true; // Paper
         world.addFreshEntity(endCrystal);
         this.setBlock(world, new BlockPos(spike.getCenterX(), spike.getHeight(), spike.getCenterZ()), Blocks.BEDROCK.defaultBlockState());
     }
@@ -162,6 +164,7 @@
     }
 
     static class SpikeCacheLoader extends CacheLoader<Long, List<SpikeFeature.EndSpike>> {
+        @Override
         public List<SpikeFeature.EndSpike> load(Long long_) {
             List<Integer> list = IntStream.range(0, 10).boxed().collect(Collectors.toList());
             Collections.shuffle(list, new Random(long_));
