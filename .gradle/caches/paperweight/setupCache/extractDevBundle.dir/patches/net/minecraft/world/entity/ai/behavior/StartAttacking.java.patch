--- a/net/minecraft/world/entity/ai/behavior/StartAttacking.java
+++ b/net/minecraft/world/entity/ai/behavior/StartAttacking.java
@@ -5,12 +5,18 @@
 import java.util.function.Function;
 import java.util.function.Predicate;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.ai.memory.MemoryModuleType;
 import net.minecraft.world.entity.ai.memory.MemoryStatus;
+import org.bukkit.craftbukkit.v1_17_R1.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+// CraftBukkit end
 
 public class StartAttacking<E extends Mob> extends Behavior<E> {
+
     private final Predicate<E> canAttackPredicate;
     private final Function<E, Optional<? extends LivingEntity>> targetFinderFunction;
 
@@ -21,7 +27,7 @@
     }
 
     public StartAttacking(Function<E, Optional<? extends LivingEntity>> targetGetter) {
-        this((mob) -> {
+        this((entityinsentient) -> {
             return true;
         }, targetGetter);
     }
@@ -30,19 +36,28 @@
         if (!this.canAttackPredicate.test(entity)) {
             return false;
         } else {
-            Optional<? extends LivingEntity> optional = this.targetFinderFunction.apply(entity);
-            return optional.isPresent() ? entity.canAttack(optional.get()) : false;
+            Optional<? extends LivingEntity> optional = (Optional) this.targetFinderFunction.apply(entity);
+
+            return optional.isPresent() ? entity.canAttack((LivingEntity) optional.get()) : false;
         }
     }
 
     protected void start(ServerLevel world, E entity, long time) {
-        this.targetFinderFunction.apply(entity).ifPresent((livingEntity) -> {
-            this.setAttackTarget(entity, livingEntity);
+        (this.targetFinderFunction.apply(entity)).ifPresent((entityliving) -> { // CraftBukkit - decompile error
+            this.a(entity, entityliving);
         });
     }
 
-    private void setAttackTarget(E entity, LivingEntity target) {
-        entity.getBrain().setMemory(MemoryModuleType.ATTACK_TARGET, target);
-        entity.getBrain().eraseMemory(MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
+    private void a(E e0, LivingEntity entityliving) {
+        // CraftBukkit start
+        EntityTargetEvent event = CraftEventFactory.callEntityTargetLivingEvent(e0, entityliving, (entityliving instanceof ServerPlayer) ? EntityTargetEvent.TargetReason.CLOSEST_PLAYER : EntityTargetEvent.TargetReason.CLOSEST_ENTITY);
+        if (event.isCancelled()) {
+            return;
+        }
+        entityliving = (event.getTarget() != null) ? ((CraftLivingEntity) event.getTarget()).getHandle() : null;
+        // CraftBukkit end
+
+        e0.getBrain().setMemory(MemoryModuleType.ATTACK_TARGET, entityliving); // CraftBukkit - decompile error
+        e0.getBrain().eraseMemory(MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE);
     }
 }
