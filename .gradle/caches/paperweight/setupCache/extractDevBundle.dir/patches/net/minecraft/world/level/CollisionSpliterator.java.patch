--- a/net/minecraft/world/level/CollisionSpliterator.java
+++ b/net/minecraft/world/level/CollisionSpliterator.java
@@ -56,6 +56,7 @@
         this.cursor = new Cursor3D(i, k, m, j, l, n);
     }
 
+    @Override
     public boolean tryAdvance(Consumer<? super VoxelShape> consumer) {
         return this.needsBorderCheck && this.worldBorderCheck(consumer) || this.collisionCheck(consumer);
     }
@@ -63,21 +64,42 @@
     boolean collisionCheck(Consumer<? super VoxelShape> action) {
         while(true) {
             if (this.cursor.advance()) {
-                int i = this.cursor.nextX();
-                int j = this.cursor.nextY();
-                int k = this.cursor.nextZ();
+                int i = this.cursor.nextX(); final int x = i;
+                int j = this.cursor.nextY(); final int y = j;
+                int k = this.cursor.nextZ(); final int z = k;
                 int l = this.cursor.getNextType();
                 if (l == 3) {
                     continue;
                 }
 
-                BlockGetter blockGetter = this.getChunk(i, k);
-                if (blockGetter == null) {
+                // Paper start - ensure we don't load chunks
+                boolean far = this.source != null && net.minecraft.server.MCUtil.distanceSq(this.source.getX(), y, this.source.getZ(), x, y, z) > 14;
+                this.pos.set(x, y, z);
+
+                BlockState blockState;
+                if (this.collisionGetter instanceof net.minecraft.server.level.WorldGenRegion) {
+                   BlockGetter blockGetter = this.getChunk(x, z);
+                   if (blockGetter == null) {
+                       continue;
+                   }
+                   blockState = blockGetter.getBlockState(this.pos);
+                } else if ((!far && this.source instanceof net.minecraft.server.level.ServerPlayer) || (this.source != null && this.source.collisionLoadChunks)) {
+                    blockState = this.collisionGetter.getBlockState(this.pos);
+                } else {
+                    blockState = this.collisionGetter.getTypeIfLoaded(this.pos);
+                }
+
+                if (blockState == null) {
+                    if (!(this.source instanceof net.minecraft.server.level.ServerPlayer) || this.source.level.paperConfig.preventMovingIntoUnloadedChunks) {
+                        VoxelShape voxelshape3 = Shapes.create(far ? this.source.getBoundingBox() : new AABB(new BlockPos(x, y, z)));
+                        action.accept(voxelshape3);
+                        return true;
+                    }
                     continue;
                 }
+                // Paper - moved up
+                // Paper end
 
-                this.pos.set(i, j, k);
-                BlockState blockState = blockGetter.getBlockState(this.pos);
                 if (!this.predicate.test(blockState, this.pos) || l == 1 && !blockState.hasLargeCollisionShape() || l == 2 && !blockState.is(Blocks.MOVING_PISTON)) {
                     continue;
                 }
@@ -118,9 +140,10 @@
         WorldBorder worldBorder = this.collisionGetter.getWorldBorder();
         AABB aABB = this.source.getBoundingBox();
         if (!isBoxFullyWithinWorldBorder(worldBorder, aABB)) {
-            VoxelShape voxelShape = worldBorder.getCollisionShape();
-            if (!isOutsideBorder(voxelShape, aABB) && isCloseToBorder(voxelShape, aABB)) {
-                action.accept(voxelShape);
+            // Paper start
+            if (worldBorder.isWithinBounds(aABB.deflate(1.0E-7D)) && !worldBorder.isWithinBounds(aABB.inflate(1.0E-7D))) {
+                action.accept(worldBorder.getCollisionShape());
+                // Paper end
                 return true;
             }
         }
