--- a/net/minecraft/network/protocol/game/ServerboundInteractPacket.java
+++ b/net/minecraft/network/protocol/game/ServerboundInteractPacket.java
@@ -10,18 +10,21 @@
 import net.minecraft.world.phys.Vec3;
 
 public class ServerboundInteractPacket implements Packet<ServerGamePacketListener> {
-    private final int entityId;
-    private final ServerboundInteractPacket.Action action;
+    private final int entityId; public final int getEntityId() { return this.entityId; } // Paper - add accessor
+    private final ServerboundInteractPacket.Action action; public final ServerboundInteractPacket.ActionType getActionType() { return this.action.getType(); } // Paper - add accessor
     private final boolean usingSecondaryAction;
     static final ServerboundInteractPacket.Action ATTACK_ACTION = new ServerboundInteractPacket.Action() {
+        @Override
         public ServerboundInteractPacket.ActionType getType() {
             return ServerboundInteractPacket.ActionType.ATTACK;
         }
 
+        @Override
         public void dispatch(ServerboundInteractPacket.Handler handler) {
             handler.onAttack();
         }
 
+        @Override
         public void write(FriendlyByteBuf buf) {
         }
     };
@@ -51,6 +54,7 @@
         this.usingSecondaryAction = buf.readBoolean();
     }
 
+    @Override
     public void write(FriendlyByteBuf buf) {
         buf.writeVarInt(this.entityId);
         buf.writeEnum(this.action.getType());
@@ -58,6 +62,7 @@
         buf.writeBoolean(this.usingSecondaryAction);
     }
 
+    @Override
     public void handle(ServerGamePacketListener listener) {
         listener.handleInteract(this);
     }
@@ -83,7 +88,7 @@
         void write(FriendlyByteBuf buf);
     }
 
-    static enum ActionType {
+    public static enum ActionType {
         INTERACT(ServerboundInteractPacket.InteractionAction::new),
         ATTACK((friendlyByteBuf) -> {
             return ServerboundInteractPacket.ATTACK_ACTION;
@@ -116,14 +121,17 @@
             this.hand = buf.readEnum(InteractionHand.class);
         }
 
+        @Override
         public ServerboundInteractPacket.ActionType getType() {
             return ServerboundInteractPacket.ActionType.INTERACT;
         }
 
+        @Override
         public void dispatch(ServerboundInteractPacket.Handler handler) {
             handler.onInteraction(this.hand);
         }
 
+        @Override
         public void write(FriendlyByteBuf buf) {
             buf.writeEnum(this.hand);
         }
@@ -143,14 +151,17 @@
             this.hand = buf.readEnum(InteractionHand.class);
         }
 
+        @Override
         public ServerboundInteractPacket.ActionType getType() {
             return ServerboundInteractPacket.ActionType.INTERACT_AT;
         }
 
+        @Override
         public void dispatch(ServerboundInteractPacket.Handler handler) {
             handler.onInteraction(this.hand, this.location);
         }
 
+        @Override
         public void write(FriendlyByteBuf buf) {
             buf.writeFloat((float)this.location.x);
             buf.writeFloat((float)this.location.y);
