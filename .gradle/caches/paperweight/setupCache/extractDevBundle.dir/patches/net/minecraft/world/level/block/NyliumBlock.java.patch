--- a/net/minecraft/world/level/block/NyliumBlock.java
+++ b/net/minecraft/world/level/block/NyliumBlock.java
@@ -15,42 +15,54 @@
 import net.minecraft.world.level.lighting.LayerLightEngine;
 
 public class NyliumBlock extends Block implements BonemealableBlock {
+
     protected NyliumBlock(BlockBehaviour.Properties settings) {
         super(settings);
     }
 
     private static boolean canBeNylium(BlockState state, LevelReader world, BlockPos pos) {
-        BlockPos blockPos = pos.above();
-        BlockState blockState = world.getBlockState(blockPos);
-        int i = LayerLightEngine.getLightBlockInto(world, state, pos, blockState, blockPos, Direction.UP, blockState.getLightBlock(world, blockPos));
+        BlockPos blockposition1 = pos.above();
+        BlockState iblockdata1 = world.getBlockState(blockposition1);
+        int i = LayerLightEngine.getLightBlockInto(world, state, pos, iblockdata1, blockposition1, Direction.UP, iblockdata1.getLightBlock((BlockGetter) world, blockposition1));
+
         return i < world.getMaxLightLevel();
     }
 
+    @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, Random random) {
-        if (!canBeNylium(state, world, pos)) {
+        if (!NyliumBlock.canBeNylium(state, (LevelReader) world, pos)) {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory.callBlockFadeEvent(world, pos, Blocks.NETHERRACK.defaultBlockState()).isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             world.setBlockAndUpdate(pos, Blocks.NETHERRACK.defaultBlockState());
         }
 
     }
 
+    @Override
     public boolean isValidBonemealTarget(BlockGetter world, BlockPos pos, BlockState state, boolean isClient) {
         return world.getBlockState(pos.above()).isAir();
     }
 
+    @Override
     public boolean isBonemealSuccess(Level world, Random random, BlockPos pos, BlockState state) {
         return true;
     }
 
+    @Override
     public void performBonemeal(ServerLevel world, Random random, BlockPos pos, BlockState state) {
-        BlockState blockState = world.getBlockState(pos);
-        BlockPos blockPos = pos.above();
-        if (blockState.is(Blocks.CRIMSON_NYLIUM)) {
-            NetherForestVegetationFeature.place(world, random, blockPos, Features.Configs.CRIMSON_FOREST_CONFIG, 3, 1);
-        } else if (blockState.is(Blocks.WARPED_NYLIUM)) {
-            NetherForestVegetationFeature.place(world, random, blockPos, Features.Configs.WARPED_FOREST_CONFIG, 3, 1);
-            NetherForestVegetationFeature.place(world, random, blockPos, Features.Configs.NETHER_SPROUTS_CONFIG, 3, 1);
+        BlockState iblockdata1 = world.getBlockState(pos);
+        BlockPos blockposition1 = pos.above();
+
+        if (iblockdata1.is(Blocks.CRIMSON_NYLIUM)) {
+            NetherForestVegetationFeature.place(world, random, blockposition1, Features.Configs.CRIMSON_FOREST_CONFIG, 3, 1);
+        } else if (iblockdata1.is(Blocks.WARPED_NYLIUM)) {
+            NetherForestVegetationFeature.place(world, random, blockposition1, Features.Configs.WARPED_FOREST_CONFIG, 3, 1);
+            NetherForestVegetationFeature.place(world, random, blockposition1, Features.Configs.NETHER_SPROUTS_CONFIG, 3, 1);
             if (random.nextInt(8) == 0) {
-                TwistingVinesFeature.place(world, random, blockPos, 3, 1, 2);
+                TwistingVinesFeature.place(world, random, blockposition1, 3, 1, 2);
             }
         }
 
