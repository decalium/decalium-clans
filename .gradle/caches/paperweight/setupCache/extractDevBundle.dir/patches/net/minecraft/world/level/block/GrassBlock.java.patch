--- a/net/minecraft/world/level/block/GrassBlock.java
+++ b/net/minecraft/world/level/block/GrassBlock.java
@@ -13,61 +13,79 @@
 import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
 
 public class GrassBlock extends SpreadingSnowyDirtBlock implements BonemealableBlock {
+
     public GrassBlock(BlockBehaviour.Properties settings) {
         super(settings);
     }
 
+    @Override
     public boolean isValidBonemealTarget(BlockGetter world, BlockPos pos, BlockState state, boolean isClient) {
         return world.getBlockState(pos.above()).isAir();
     }
 
+    @Override
     public boolean isBonemealSuccess(Level world, Random random, BlockPos pos, BlockState state) {
         return true;
     }
 
+    @Override
     public void performBonemeal(ServerLevel world, Random random, BlockPos pos, BlockState state) {
-        BlockPos blockPos = pos.above();
-        BlockState blockState = Blocks.GRASS.defaultBlockState();
-
-        label48:
-        for(int i = 0; i < 128; ++i) {
-            BlockPos blockPos2 = blockPos;
-
-            for(int j = 0; j < i / 16; ++j) {
-                blockPos2 = blockPos2.offset(random.nextInt(3) - 1, (random.nextInt(3) - 1) * random.nextInt(3) / 2, random.nextInt(3) - 1);
-                if (!world.getBlockState(blockPos2.below()).is(this) || world.getBlockState(blockPos2).isCollisionShapeFullBlock(world, blockPos2)) {
-                    continue label48;
-                }
-            }
+        BlockPos blockposition1 = pos.above();
+        BlockState iblockdata1 = Blocks.GRASS.defaultBlockState();
+        int i = 0;
 
-            BlockState blockState2 = world.getBlockState(blockPos2);
-            if (blockState2.is(blockState.getBlock()) && random.nextInt(10) == 0) {
-                ((BonemealableBlock)blockState.getBlock()).performBonemeal(world, random, blockPos2, blockState2);
-            }
+        while (i < 128) {
+            BlockPos blockposition2 = blockposition1;
+            int j = 0;
 
-            if (blockState2.isAir()) {
-                BlockState blockState3;
-                if (random.nextInt(8) == 0) {
-                    List<ConfiguredFeature<?, ?>> list = world.getBiome(blockPos2).getGenerationSettings().getFlowerFeatures();
-                    if (list.isEmpty()) {
+            while (true) {
+                if (j < i / 16) {
+                    blockposition2 = blockposition2.offset(random.nextInt(3) - 1, (random.nextInt(3) - 1) * random.nextInt(3) / 2, random.nextInt(3) - 1);
+                    if (world.getBlockState(blockposition2.below()).is((Block) this) && !world.getBlockState(blockposition2).isCollisionShapeFullBlock(world, blockposition2)) {
+                        ++j;
                         continue;
                     }
-
-                    blockState3 = getBlockState(random, blockPos2, list.get(0));
                 } else {
-                    blockState3 = blockState;
-                }
+                    BlockState iblockdata2 = world.getBlockState(blockposition2);
 
-                if (blockState3.canSurvive(world, blockPos2)) {
-                    world.setBlock(blockPos2, blockState3, 3);
+                    if (iblockdata2.is(iblockdata1.getBlock()) && random.nextInt(10) == 0) {
+                        ((BonemealableBlock) iblockdata1.getBlock()).performBonemeal(world, random, blockposition2, iblockdata2);
+                    }
+
+                    if (iblockdata2.isAir()) {
+                        label38:
+                        {
+                            BlockState iblockdata3;
+
+                            if (random.nextInt(8) == 0) {
+                                List<ConfiguredFeature<?, ?>> list = world.getBiome(blockposition2).getGenerationSettings().getFlowerFeatures();
+
+                                if (list.isEmpty()) {
+                                    break label38;
+                                }
+
+                                iblockdata3 = GrassBlock.getBlockState(random, blockposition2, (ConfiguredFeature) list.get(0));
+                            } else {
+                                iblockdata3 = iblockdata1;
+                            }
+
+                            if (iblockdata3.canSurvive(world, blockposition2)) {
+                                org.bukkit.craftbukkit.v1_17_R1.event.CraftEventFactory.handleBlockGrowEvent(world, blockposition2, iblockdata3, 3); // CraftBukkit
+                            }
+                        }
+                    }
                 }
+
+                ++i;
+                break;
             }
         }
 
     }
 
     private static <U extends FeatureConfiguration> BlockState getBlockState(Random random, BlockPos pos, ConfiguredFeature<U, ?> flowerFeature) {
-        AbstractFlowerFeature<U> abstractFlowerFeature = (AbstractFlowerFeature)flowerFeature.feature;
-        return abstractFlowerFeature.getRandomFlower(random, pos, flowerFeature.config());
+        AbstractFlowerFeature<U> worldgenflowers = (AbstractFlowerFeature) flowerFeature.feature;
+
+        return worldgenflowers.getRandomFlower(random, pos, flowerFeature.config());
     }
 }
