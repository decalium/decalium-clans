--- a/net/minecraft/world/entity/npc/VillagerTrades.java
+++ b/net/minecraft/world/entity/npc/VillagerTrades.java
@@ -97,6 +97,7 @@
             this.villagerXp = experience;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             ItemStack itemStack = new ItemStack(Items.EMERALD, this.value);
             ItemStack itemStack2 = new ItemStack(this.item);
@@ -137,6 +138,7 @@
             this.priceMultiplier = 0.05F;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             ItemStack itemStack = new ItemStack(this.item, this.cost);
             return new MerchantOffer(itemStack, new ItemStack(Items.EMERALD), this.maxUses, this.villagerXp, this.priceMultiplier);
@@ -162,6 +164,7 @@
         }
 
         @Nullable
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             if (entity instanceof VillagerDataHolder) {
                 ItemStack itemStack = new ItemStack(this.trades.get(((VillagerDataHolder)entity).getVillagerData().getType()), this.cost);
@@ -179,6 +182,7 @@
             this.villagerXp = experience;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             List<Enchantment> list = Registry.ENCHANTMENT.stream().filter(Enchantment::isTradeable).collect(Collectors.toList());
             Enchantment enchantment = list.get(random.nextInt(list.size()));
@@ -216,6 +220,7 @@
             this.priceMultiplier = multiplier;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             int i = 5 + random.nextInt(15);
             ItemStack itemStack = EnchantmentHelper.enchantItem(random, new ItemStack(this.itemStack.getItem()), i, false);
@@ -256,6 +261,7 @@
         }
 
         @Nullable
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             return new MerchantOffer(new ItemStack(Items.EMERALD, this.emeraldCost), new ItemStack(this.fromItem.getItem(), this.fromCount), new ItemStack(this.toItem.getItem(), this.toCount), this.maxUses, this.villagerXp, this.priceMultiplier);
         }
@@ -294,6 +300,7 @@
             this.priceMultiplier = multiplier;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             return new MerchantOffer(new ItemStack(Items.EMERALD, this.emeraldCost), new ItemStack(this.itemStack.getItem(), this.numberOfItems), this.maxUses, this.villagerXp, this.priceMultiplier);
         }
@@ -313,6 +320,7 @@
         }
 
         @Nullable
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             ItemStack itemStack = new ItemStack(Items.SUSPICIOUS_STEW, 1);
             SuspiciousStewItem.saveMobEffect(itemStack, this.effect, this.duration);
@@ -341,6 +349,7 @@
             this.priceMultiplier = 0.05F;
         }
 
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             ItemStack itemStack = new ItemStack(Items.EMERALD, this.emeraldCost);
             List<Potion> list = Registry.POTION.stream().filter((potionx) -> {
@@ -368,12 +377,14 @@
         }
 
         @Nullable
+        @Override
         public MerchantOffer getOffer(Entity entity, Random random) {
             if (!(entity.level instanceof ServerLevel)) {
                 return null;
             } else {
                 ServerLevel serverLevel = (ServerLevel)entity.level;
-                BlockPos blockPos = serverLevel.findNearestMapFeature(this.destination, entity.blockPosition(), 100, true);
+                if (!serverLevel.paperConfig.enableTreasureMaps) return null; // Paper
+                BlockPos blockPos = serverLevel.findNearestMapFeature(this.destination, entity.blockPosition(), 100, !serverLevel.paperConfig.treasureMapsAlreadyDiscovered); // Paper
                 if (blockPos != null) {
                     ItemStack itemStack = MapItem.create(serverLevel, blockPos.getX(), blockPos.getZ(), (byte)2, true, true);
                     MapItem.renderBiomePreviewMap(serverLevel, itemStack);
