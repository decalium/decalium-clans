--- a/net/minecraft/ChatFormatting.java
+++ b/net/minecraft/ChatFormatting.java
@@ -42,7 +42,7 @@
     }));
     private static final Pattern STRIP_FORMATTING_PATTERN = Pattern.compile("(?i)\u00a7[0-9A-FK-OR]");
     private final String name;
-    private final char code;
+    public final char code;
     private final boolean isFormat;
     private final String toString;
     private final int id;
@@ -53,7 +53,7 @@
         return name.toLowerCase(Locale.ROOT).replaceAll("[^a-z]", "");
     }
 
-    private ChatFormatting(String name, char code, int colorIndex, @Nullable Integer colorValue) {
+    private ChatFormatting(String name, @Nullable char code, int colorIndex, Integer colorValue) {
         this(name, code, false, colorIndex, colorValue);
     }
 
@@ -61,7 +61,7 @@
         this(name, code, modifier, -1, (Integer)null);
     }
 
-    private ChatFormatting(String name, char code, boolean modifier, int colorIndex, @Nullable Integer colorValue) {
+    private ChatFormatting(String name, char code, @Nullable boolean modifier, int colorIndex, Integer colorValue) {
         this.name = name;
         this.code = code;
         this.isFormat = modifier;
@@ -95,6 +95,7 @@
         return this.name().toLowerCase(Locale.ROOT);
     }
 
+    @Override
     public String toString() {
         return this.toString;
     }
@@ -109,6 +110,18 @@
         return name == null ? null : FORMATTING_BY_NAME.get(cleanName(name));
     }
 
+    // Paper start
+    @Nullable public static ChatFormatting getByHexValue(int i) {
+        for (ChatFormatting value : values()) {
+            if (value.getColor() != null && value.getColor() == i) {
+                return value;
+            }
+        }
+
+        return null;
+    }
+    // Paper end
+
     @Nullable
     public static ChatFormatting getById(int colorIndex) {
         if (colorIndex < 0) {
