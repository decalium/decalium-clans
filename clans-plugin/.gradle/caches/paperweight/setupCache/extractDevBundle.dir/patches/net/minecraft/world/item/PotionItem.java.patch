--- a/net/minecraft/world/item/PotionItem.java
+++ b/net/minecraft/world/item/PotionItem.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.item;
 
+import java.util.Iterator;
 import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
@@ -20,6 +21,7 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 
 public class PotionItem extends Item {
+
     private static final int DRINK_DURATION = 32;
 
     public PotionItem(Item.Properties settings) {
@@ -33,35 +35,53 @@
 
     @Override
     public ItemStack finishUsingItem(ItemStack stack, Level world, LivingEntity user) {
-        Player player = user instanceof Player ? (Player)user : null;
-        if (player instanceof ServerPlayer) {
-            CriteriaTriggers.CONSUME_ITEM.trigger((ServerPlayer)player, stack);
+        Player entityhuman = user instanceof Player ? (Player) user : null;
+
+        if (entityhuman instanceof ServerPlayer) {
+            CriteriaTriggers.CONSUME_ITEM.trigger((ServerPlayer) entityhuman, stack);
         }
 
+        List<MobEffectInstance> instantLater = new java.util.ArrayList<>(); // Paper - Fix harming potion dupe
         if (!world.isClientSide) {
-            for(MobEffectInstance mobEffectInstance : PotionUtils.getMobEffects(stack)) {
-                if (mobEffectInstance.getEffect().isInstantenous()) {
-                    mobEffectInstance.getEffect().applyInstantenousEffect(player, player, user, mobEffectInstance.getAmplifier(), 1.0D);
+            List<MobEffectInstance> list = PotionUtils.getMobEffects(stack);
+            Iterator iterator = list.iterator();
+
+            while (iterator.hasNext()) {
+                MobEffectInstance mobeffect = (MobEffectInstance) iterator.next();
+
+                if (mobeffect.getEffect().isInstantenous()) {
+                    instantLater.add(mobeffect); // Paper - Fix harming potion dupe
                 } else {
-                    user.addEffect(new MobEffectInstance(mobEffectInstance));
+                    user.addEffect(new MobEffectInstance(mobeffect), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.POTION_DRINK); // CraftBukkit
                 }
             }
         }
 
-        if (player != null) {
-            player.awardStat(Stats.ITEM_USED.get(this));
-            if (!player.getAbilities().instabuild) {
+        if (entityhuman != null) {
+            entityhuman.awardStat(Stats.ITEM_USED.get(this));
+            if (!entityhuman.getAbilities().instabuild) {
                 stack.shrink(1);
             }
         }
 
-        if (player == null || !player.getAbilities().instabuild) {
+        // Paper start - Fix harming potion dupe
+        for (MobEffectInstance mobeffect : instantLater) {
+            mobeffect.getEffect().applyInstantenousEffect(entityhuman, entityhuman, user, mobeffect.getAmplifier(), 1.0D);
+        }
+        // Paper end
+        if (entityhuman == null || !entityhuman.getAbilities().instabuild) {
+            // Paper start - Fix harming potion dupe
+            if (user.getHealth() <= 0 && !user.level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_KEEPINVENTORY)) {
+                user.spawnAtLocation(new ItemStack(Items.GLASS_BOTTLE), 0);
+                return ItemStack.EMPTY;
+            }
+            // Paper end
             if (stack.isEmpty()) {
                 return new ItemStack(Items.GLASS_BOTTLE);
             }
 
-            if (player != null) {
-                player.getInventory().add(new ItemStack(Items.GLASS_BOTTLE));
+            if (entityhuman != null) {
+                entityhuman.getInventory().add(new ItemStack(Items.GLASS_BOTTLE));
             }
         }
 
@@ -102,9 +122,13 @@
     @Override
     public void fillItemCategory(CreativeModeTab group, NonNullList<ItemStack> stacks) {
         if (this.allowdedIn(group)) {
-            for(Potion potion : Registry.POTION) {
-                if (potion != Potions.EMPTY) {
-                    stacks.add(PotionUtils.setPotion(new ItemStack(this), potion));
+            Iterator iterator = Registry.POTION.iterator();
+
+            while (iterator.hasNext()) {
+                Potion potionregistry = (Potion) iterator.next();
+
+                if (potionregistry != Potions.EMPTY) {
+                    stacks.add(PotionUtils.setPotion(new ItemStack(this), potionregistry));
                 }
             }
         }
