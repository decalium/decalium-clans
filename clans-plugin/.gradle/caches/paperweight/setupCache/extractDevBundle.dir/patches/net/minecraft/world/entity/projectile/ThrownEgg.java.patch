--- a/net/minecraft/world/entity/projectile/ThrownEgg.java
+++ b/net/minecraft/world/entity/projectile/ThrownEgg.java
@@ -2,36 +2,42 @@
 
 import net.minecraft.core.particles.ItemParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.LivingEntity;
-import net.minecraft.world.entity.animal.Chicken;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.LivingEntity;
+import org.bukkit.entity.Ageable;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerEggThrowEvent;
+// CraftBukkit end
 
 public class ThrownEgg extends ThrowableItemProjectile {
-    public ThrownEgg(EntityType<? extends ThrownEgg> type, Level world) {
+
+    public ThrownEgg(net.minecraft.world.entity.EntityType<? extends ThrownEgg> type, Level world) {
         super(type, world);
     }
 
     public ThrownEgg(Level world, LivingEntity owner) {
-        super(EntityType.EGG, owner, world);
+        super(net.minecraft.world.entity.EntityType.EGG, owner, world);
     }
 
     public ThrownEgg(Level world, double x, double y, double z) {
-        super(EntityType.EGG, x, y, z, world);
+        super(net.minecraft.world.entity.EntityType.EGG, x, y, z, world);
     }
 
     @Override
     public void handleEntityEvent(byte status) {
         if (status == 3) {
-            double d = 0.08D;
+            double d0 = 0.08D;
 
-            for(int i = 0; i < 8; ++i) {
-                this.level.addParticle(new ItemParticleOption(ParticleTypes.ITEM, this.getItem()), this.getX(), this.getY(), this.getZ(), ((double)this.random.nextFloat() - 0.5D) * 0.08D, ((double)this.random.nextFloat() - 0.5D) * 0.08D, ((double)this.random.nextFloat() - 0.5D) * 0.08D);
+            for (int i = 0; i < 8; ++i) {
+                this.level.addParticle(new ItemParticleOption(ParticleTypes.ITEM, this.getItem()), this.getX(), this.getY(), this.getZ(), ((double) this.random.nextFloat() - 0.5D) * 0.08D, ((double) this.random.nextFloat() - 0.5D) * 0.08D, ((double) this.random.nextFloat() - 0.5D) * 0.08D);
             }
         }
 
@@ -47,21 +53,51 @@
     protected void onHit(HitResult hitResult) {
         super.onHit(hitResult);
         if (!this.level.isClientSide) {
-            if (this.random.nextInt(8) == 0) {
-                int i = 1;
+            boolean hatching = this.random.nextInt(8) == 0; // CraftBukkit
+            if (true) {
+                byte b0 = 1;
+
                 if (this.random.nextInt(32) == 0) {
-                    i = 4;
+                    b0 = 4;
                 }
 
-                for(int j = 0; j < i; ++j) {
-                    Chicken chicken = EntityType.CHICKEN.create(this.level);
-                    chicken.setAge(-24000);
-                    chicken.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0F);
-                    this.level.addFreshEntity(chicken);
+                // CraftBukkit start
+                if (!hatching) {
+                    b0 = 0;
+                }
+                EntityType hatchingType = EntityType.CHICKEN;
+
+                Entity shooter = this.getOwner();
+                if (shooter instanceof ServerPlayer) {
+                    PlayerEggThrowEvent event = new PlayerEggThrowEvent((Player) shooter.getBukkitEntity(), (org.bukkit.entity.Egg) this.getBukkitEntity(), hatching, b0, hatchingType);
+                    this.level.getCraftServer().getPluginManager().callEvent(event);
+
+                    b0 = event.getNumHatches();
+                    hatching = event.isHatching();
+                    hatchingType = event.getHatchingType();
+                }
+
+                // Paper start
+                com.destroystokyo.paper.event.entity.ThrownEggHatchEvent event = new com.destroystokyo.paper.event.entity.ThrownEggHatchEvent((org.bukkit.entity.Egg) getBukkitEntity(), hatching, b0, hatchingType);
+                event.callEvent();
+
+                b0 = event.getNumHatches();
+                hatching = event.isHatching();
+                hatchingType = event.getHatchingType();
+                // Paper end
+                if (hatching) {
+                    for (int i = 0; i < b0; ++i) {
+                        Entity entity = level.getWorld().createEntity(new org.bukkit.Location(level.getWorld(), this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0F), hatchingType.getEntityClass());
+                        if (entity.getBukkitEntity() instanceof Ageable) {
+                            ((Ageable) entity.getBukkitEntity()).setBaby();
+                        }
+                        level.getWorld().addEntity(entity, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.EGG);
+                    }
                 }
+                // CraftBukkit end
             }
 
-            this.level.broadcastEntityEvent(this, (byte)3);
+            this.level.broadcastEntityEvent(this, (byte) 3);
             this.discard();
         }
 
