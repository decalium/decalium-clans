--- a/net/minecraft/world/level/LevelAccessor.java
+++ b/net/minecraft/world/level/LevelAccessor.java
@@ -21,6 +21,7 @@
 import net.minecraft.world.ticks.TickPriority;
 
 public interface LevelAccessor extends CommonLevelAccessor, LevelTimeAccess {
+
     @Override
     default long dayTime() {
         return this.getLevelData().getDayTime();
@@ -30,12 +31,12 @@
 
     LevelTickAccess<Block> getBlockTicks();
 
-    private <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay, TickPriority priority) {
-        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long)delay, priority, this.nextSubTickCount());
+    default <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay, TickPriority priority) { // CraftBukkit - decompile error
+        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long) delay, priority, this.nextSubTickCount());
     }
 
-    private <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay) {
-        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long)delay, this.nextSubTickCount());
+    default <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay) { // CraftBukkit - decompile error
+        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long) delay, this.nextSubTickCount());
     }
 
     default void scheduleTick(BlockPos pos, Block block, int delay, TickPriority priority) {
@@ -76,8 +77,7 @@
 
     Random getRandom();
 
-    default void blockUpdated(BlockPos pos, Block block) {
-    }
+    default void blockUpdated(BlockPos pos, Block block) {}
 
     void playSound(@Nullable Player player, BlockPos pos, SoundEvent sound, SoundSource category, float volume, float pitch);
 
@@ -86,20 +86,22 @@
     void levelEvent(@Nullable Player player, int eventId, BlockPos pos, int data);
 
     default void levelEvent(int eventId, BlockPos pos, int data) {
-        this.levelEvent((Player)null, eventId, pos, data);
+        this.levelEvent((Player) null, eventId, pos, data);
     }
 
     void gameEvent(@Nullable Entity entity, GameEvent event, BlockPos pos);
 
     default void gameEvent(GameEvent event, BlockPos pos) {
-        this.gameEvent((Entity)null, event, pos);
+        this.gameEvent((Entity) null, event, pos);
     }
 
     default void gameEvent(GameEvent event, Entity emitter) {
-        this.gameEvent((Entity)null, event, emitter.blockPosition());
+        this.gameEvent((Entity) null, event, emitter.blockPosition());
     }
 
     default void gameEvent(@Nullable Entity entity, GameEvent event, Entity emitter) {
         this.gameEvent(entity, event, emitter.blockPosition());
     }
+
+    net.minecraft.server.level.ServerLevel getMinecraftWorld(); // CraftBukkit
 }
