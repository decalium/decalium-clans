--- a/net/minecraft/world/item/trading/Merchant.java
+++ b/net/minecraft/world/item/trading/Merchant.java
@@ -10,6 +10,7 @@
 import net.minecraft.world.item.ItemStack;
 
 public interface Merchant {
+
     void setTradingPlayer(@Nullable Player customer);
 
     @Nullable
@@ -19,6 +20,7 @@
 
     void overrideOffers(MerchantOffers offers);
 
+    default void processTrade(MerchantOffer merchantRecipe, @Nullable io.papermc.paper.event.player.PlayerPurchaseEvent event) { this.notifyTrade(merchantRecipe); } // Paper
     void notifyTrade(MerchantOffer offer);
 
     void notifyTradeUpdated(ItemStack stack);
@@ -36,17 +38,21 @@
     }
 
     default void openTradingScreen(Player player, Component test, int levelProgress) {
-        OptionalInt optionalInt = player.openMenu(new SimpleMenuProvider((syncId, playerInventory, playerx) -> {
-            return new MerchantMenu(syncId, playerInventory, this);
+        OptionalInt optionalint = player.openMenu(new SimpleMenuProvider((j, playerinventory, entityhuman1) -> {
+            return new MerchantMenu(j, playerinventory, this);
         }, test));
-        if (optionalInt.isPresent()) {
-            MerchantOffers merchantOffers = this.getOffers();
-            if (!merchantOffers.isEmpty()) {
-                player.sendMerchantOffers(optionalInt.getAsInt(), merchantOffers, levelProgress, this.getVillagerXp(), this.showProgressBar(), this.canRestock());
+
+        if (optionalint.isPresent()) {
+            MerchantOffers merchantrecipelist = this.getOffers();
+
+            if (!merchantrecipelist.isEmpty()) {
+                player.sendMerchantOffers(optionalint.getAsInt(), merchantrecipelist, levelProgress, this.getVillagerXp(), this.showProgressBar(), this.canRestock());
             }
         }
 
     }
 
     boolean isClientSide();
+
+    org.bukkit.craftbukkit.v1_18_R1.inventory.CraftMerchant getCraftMerchant(); // CraftBukkit
 }
