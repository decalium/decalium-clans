--- a/net/minecraft/world/item/HangingEntityItem.java
+++ b/net/minecraft/world/item/HangingEntityItem.java
@@ -4,17 +4,23 @@
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.world.InteractionResult;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.decoration.GlowItemFrame;
 import net.minecraft.world.entity.decoration.HangingEntity;
 import net.minecraft.world.entity.decoration.ItemFrame;
 import net.minecraft.world.entity.decoration.Painting;
-import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.context.UseOnContext;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 
+// CraftBukkit start
+import org.bukkit.entity.Player;
+import org.bukkit.event.hanging.HangingPlaceEvent;
+// CraftBukkit end
+
 public class HangingEntityItem extends Item {
+
     private final EntityType<? extends HangingEntity> type;
 
     public HangingEntityItem(EntityType<? extends HangingEntity> type, Item.Properties settings) {
@@ -24,49 +30,64 @@
 
     @Override
     public InteractionResult useOn(UseOnContext context) {
-        BlockPos blockPos = context.getClickedPos();
-        Direction direction = context.getClickedFace();
-        BlockPos blockPos2 = blockPos.relative(direction);
-        Player player = context.getPlayer();
-        ItemStack itemStack = context.getItemInHand();
-        if (player != null && !this.mayPlace(player, direction, itemStack, blockPos2)) {
+        BlockPos blockposition = context.getClickedPos();
+        Direction enumdirection = context.getClickedFace();
+        BlockPos blockposition1 = blockposition.relative(enumdirection);
+        net.minecraft.world.entity.player.Player entityhuman = context.getPlayer();
+        ItemStack itemstack = context.getItemInHand();
+
+        if (entityhuman != null && !this.mayPlace(entityhuman, enumdirection, itemstack, blockposition1)) {
             return InteractionResult.FAIL;
         } else {
-            Level level = context.getLevel();
-            HangingEntity hangingEntity;
+            Level world = context.getLevel();
+            Object object;
+
             if (this.type == EntityType.PAINTING) {
-                hangingEntity = new Painting(level, blockPos2, direction);
+                object = new Painting(world, blockposition1, enumdirection);
             } else if (this.type == EntityType.ITEM_FRAME) {
-                hangingEntity = new ItemFrame(level, blockPos2, direction);
+                object = new ItemFrame(world, blockposition1, enumdirection);
             } else {
                 if (this.type != EntityType.GLOW_ITEM_FRAME) {
-                    return InteractionResult.sidedSuccess(level.isClientSide);
+                    return InteractionResult.sidedSuccess(world.isClientSide);
                 }
 
-                hangingEntity = new GlowItemFrame(level, blockPos2, direction);
+                object = new GlowItemFrame(world, blockposition1, enumdirection);
             }
 
-            CompoundTag compoundTag = itemStack.getTag();
-            if (compoundTag != null) {
-                EntityType.updateCustomEntityTag(level, player, hangingEntity, compoundTag);
+            CompoundTag nbttagcompound = itemstack.getTag();
+
+            if (nbttagcompound != null) {
+                EntityType.updateCustomEntityTag(world, entityhuman, (Entity) object, nbttagcompound);
             }
 
-            if (hangingEntity.survives()) {
-                if (!level.isClientSide) {
-                    hangingEntity.playPlacementSound();
-                    level.gameEvent(player, GameEvent.ENTITY_PLACE, blockPos);
-                    level.addFreshEntity(hangingEntity);
+            if (((HangingEntity) object).survives()) {
+                if (!world.isClientSide) {
+                    // CraftBukkit start - fire HangingPlaceEvent
+                    Player who = (context.getPlayer() == null) ? null : (Player) context.getPlayer().getBukkitEntity();
+                    org.bukkit.block.Block blockClicked = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                    org.bukkit.block.BlockFace blockFace = org.bukkit.craftbukkit.v1_18_R1.block.CraftBlock.notchToBlockFace(enumdirection);
+
+                    HangingPlaceEvent event = new HangingPlaceEvent((org.bukkit.entity.Hanging) ((HangingEntity) object).getBukkitEntity(), who, blockClicked, blockFace, org.bukkit.craftbukkit.v1_18_R1.inventory.CraftItemStack.asBukkitCopy(itemstack));
+                    world.getCraftServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        return InteractionResult.FAIL;
+                    }
+                    // CraftBukkit end
+                    ((HangingEntity) object).playPlacementSound();
+                    world.gameEvent(entityhuman, GameEvent.ENTITY_PLACE, blockposition);
+                    world.addFreshEntity((Entity) object);
                 }
 
-                itemStack.shrink(1);
-                return InteractionResult.sidedSuccess(level.isClientSide);
+                itemstack.shrink(1);
+                return InteractionResult.sidedSuccess(world.isClientSide);
             } else {
                 return InteractionResult.CONSUME;
             }
         }
     }
 
-    protected boolean mayPlace(Player player, Direction side, ItemStack stack, BlockPos pos) {
+    protected boolean mayPlace(net.minecraft.world.entity.player.Player player, Direction side, ItemStack stack, BlockPos pos) {
         return !side.getAxis().isVertical() && player.mayUseItemAt(pos, side, stack);
     }
 }
