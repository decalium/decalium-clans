--- a/net/minecraft/world/level/lighting/BlockLightEngine.java
+++ b/net/minecraft/world/level/lighting/BlockLightEngine.java
@@ -15,6 +15,7 @@
 public final class BlockLightEngine extends LayerLightEngine<BlockLightSectionStorage.BlockDataLayerStorageMap, BlockLightSectionStorage> {
     private static final Direction[] DIRECTIONS = Direction.values();
     private final BlockPos.MutableBlockPos pos = new BlockPos.MutableBlockPos();
+    private final MutableInt mutableInt = new MutableInt(); // Paper
 
     public BlockLightEngine(LightChunkGetter chunkProvider) {
         super(chunkProvider, LightLayer.BLOCK, new BlockLightSectionStorage(chunkProvider));
@@ -44,7 +45,7 @@
             if (direction == null) {
                 return 15;
             } else {
-                MutableInt mutableInt = new MutableInt();
+                //MutableInt mutableint = new MutableInt(); // Paper - share mutableint, single threaded
                 BlockState blockState = this.getStateAndOpacity(targetId, mutableInt);
                 if (mutableInt.getValue() >= 15) {
                     return 15;
